create a "generic" secret in a specified "workload" within your GKE cluster of GCP
Kubernetes Engine > Clusters > Workloads > "Name"
Activate Cloud Shell

} kubectl get node - validate working in the correct "cluster"
gke-example-2-default-pool-222abcd9-89vj

once cluster is validated
Create secret using kubectl
} kubectl create secret generic [Secret_Name] --from-file=example.crt --from-file=example.key
(crt & key files must be created and in directory prior to running the "create secret" command)
secret "Secret_Name" created
validate secret creation by running:
} kubectl get secret - new secret listed, along with other secrets within the cluster

} kubectl get secret [Secret_Name} -o yaml
apiVersion: v1
data:
} example.key - content of key file | Base64 encoded for security
} example.crt - content of crt file | Base64 encoded for security
kind: Secret
metadata:
creationTimestamp: yy-mm-ddT#: 00:00Z
name: Secret_Name
namespace: default
resourceVersion: "00000000"
selfLink: /api/v1/namespace/default/secrets/Secret_Name
uid:
type: Opaque

}kubectl edit secret [Secret_Name]
apiVersion: v1
data:
} tls.key - content of key file | Base64 encodde for security
} tls.crt - content of crt file | Base64 encoded for security
kind: Secret
metadata:
creationTimestamp: yy-mm-ddT#: 00:00Z
name: Secret_Name
namespace: default
resourceVersion: "00000000"
selfLink: /api/v1/namespace/default/secrets/Secret_Name
uid:
type: Opaque (immutable)
